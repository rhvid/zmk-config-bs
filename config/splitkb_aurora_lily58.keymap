/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <29>;
};

&sensors {
    compatible = "zmk,keymap-sensors";
    sensors = <&left_encoder &right_encoder>;
    triggers-per-rotation = <36>;
};

/ {
    behaviors {
    };

    macros {
        /**
         * Temporarily switches to a layer (`&mo`) while a modifier is held.
         * Analogous to QMK's `LM()`, using a parameterized macro.
         *
         * Params:
         *  1. Layer to switch to
         *  2. Modifier to press while layer is active
         *
         * Example:
         *  `&lm NUM_LAYER LSHIFT`
         */

        light: light {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bl BL_SET 100>;
            label = "LIGHT";
        };

        apos: apos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT>;
            label = "APOS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3        &kp N4    &kp N5                           &kp N6  &kp N7         &kp N8             &kp N9     &kp N0    &apos
&kp TAB         &kp Q   &kp W   &kp E         &kp R     &kp T                            &kp Y   &kp U          &kp I              &kp O      &kp P     &kp A
&kp LEFT_SHIFT  &kp A   &kp S   &kp D         &kp F     &kp G                            &kp H   &kp J          &kp K              &kp L      &kp SEMI  &kp APOS
&kp LCTRL       &kp Z   &kp X   &kp C         &kp V     &kp B   &kp C_MUTE    &kp LC(W)  &kp N   &kp M          &kp SEMICOLON      &kp COLON  &kp FSLH  &kp RIGHT_SHIFT
                                &kp LEFT_ALT  &kp LGUI  &mo 1   &kp SPACE     &kp ENTER  &mo 2   &kp BACKSPACE  &kp RIGHT_BRACKET
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp UP DOWN>;
        };

        lower_layer {
            bindings = <
&ext_power EP_TOG  &bt BT_SEL 0                    &bt BT_SEL 1                    &bt BT_SEL 2  &trans    &bt BT_CLR                               &trans       &kp N7        &kp N8  &kp N9  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&rgb_ug RGB_BRI    &mt DOUBLE_QUOTES SINGLE_QUOTE  &kp PRINTSCREEN                 &kp LS(RPAR)  &kp N4    &kp N5                                   &trans       &kp NUMBER_4  &kp N5  &kp N6  &kp PLUS              &kp LCTRL
&rgb_ug RGB_BRD    &kp GRAVE                       &kp ESC                         &kp FSLH      &trans    &kp LESS_THAN                            &trans       &kp N1        &kp N2  &kp N3  &kp MINUS             &kp STAR
&rgb_ug RGB_TOG    &rgb_ug RGB_EFF                 &rgb_ug RGB_COLOR_HSB(0,0,100)  &trans        &kp PIPE  &kp BACKSLASH  &trans            &trans  &kp KP_PLUS  &kp N0        &trans  &trans  &trans                &trans
                                                                                   &trans        &trans    &trans         &kp UNDERSCORE    &trans  &trans       &trans        &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        raise_layer {
            bindings = <
&trans      &kp F1            &kp F2             &kp F3             &kp F4         &kp F5                           &kp F6     &kp F7    &kp F8          &kp F9         &kp F10    &kp DELETE
&bt BT_CLR  &bt BT_SEL 0      &kp LG(D)          &kp LG(UP)         &kp LG(TAB)    &bt BT_SEL 4                     &kp F7     &kp HOME  &kp UP_ARROW    &kp END        &kp PG_UP  &kp F12
&trans      &kp EXCL          &kp LG(LEFT)       &kp LG(DOWN)       &kp LG(RIGHT)  &kp LESS_THAN                    &kp CARET  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT      &kp PG_DN  &kp TILDE
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &kp PIPE       &kp BACKSLASH  &trans    &trans  &trans     &kp END   &kp PLUS        &kp PAGE_DOWN  &kp RBRC   &kp PIPE
                                                 &trans             &trans         &trans         &trans    &trans  &trans     &trans    &trans
            >;

            sensor-bindings = <&none>, <&inc_dec_kp UP_ARROW DOWN>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans  &kp DELETE
&trans  &trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp LC(W)  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans     &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&inc_dec_kp LS(TAB) TAB>;
        };
    };
};
